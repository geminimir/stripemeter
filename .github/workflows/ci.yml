name: CI (Pro+ fast)
on:
  pull_request:
  push:
    branches: ["**"]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  actions: read
  checks: write
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |

~/.cache/pip
~/.npm
~/.pnpm-store
~/.yarn
~/.cargo/registry
~/.cargo/git
~/.cache/go-build
~/go/pkg/mod
~/.m2/repository
~/.gradle/caches
~/.gradle/wrapper
          key: ci-${{ runner.os }}-${{ hashFiles('**/requirements.txt','**/poetry.lock','**/package-lock.json','**/pnpm-lock.yaml','**/yarn.lock','**/Cargo.lock','**/go.sum','**/pom.xml','**/build.gradle*') }}

      # Node
      - name: Setup Node
        if: ${{ hashFiles('**/package.json') != '' }}
        uses: actions/setup-node@v4
        with: { node-version: '18' }

      # Python
      - name: Setup Python
        if: ${{ (hashFiles('**/pyproject.toml','**/requirements.txt','**/setup.py') != '') || (hashFiles('**/tests/**') != '') }}
        uses: actions/setup-python@v5
        with: { python-version: '3.x' }

      # Rust
      - name: Setup Rust
        if: ${{ hashFiles('**/Cargo.toml') != '' }}
        uses: dtolnay/rust-toolchain@stable

      # Go
      - name: Setup Go
        if: ${{ hashFiles('**/go.mod') != '' }}
        uses: actions/setup-go@v5
        with: { go-version: '1.22' }

      # Java (Maven)
      - name: Setup Java (Maven)
        if: ${{ hashFiles('**/pom.xml') != '' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Gradle
      - name: Setup Java (Gradle)
        if: ${{ hashFiles('**/build.gradle*') != '' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install deps (best-effort)
        shell: bash
        run: |
          set -euxo pipefail
          if [ -f package.json ]; then (npm ci || npm install); fi
          if [ -f requirements.txt ]; then python -m pip install -U pip; pip install -r requirements.txt || true; fi
          if [ -f pom.xml ]; then mvn -B -ntp -q -DskipITs=false -DskipTests=false -Dstyle.color=always -Dlicense.skip=true -Dspotbugs.skip=true test -DfailIfNoTests=false || true; fi
          if ls build.gradle* >/dev/null 2>&1; then ./gradlew --no-daemon test || true; fi

      - name: Run tests (auto-detect)
        shell: bash
        run: |
          set -euxo pipefail
          SUMMARY="$GITHUB_STEP_SUMMARY"
          echo "### ZIANA CI Summary" >> "$SUMMARY"
          echo "*Started:* $(date -u)" >> "$SUMMARY"
          EXIT=0
          # Node
          if [ -f package.json ]; then
            (npm test --if-present || EXIT=$?) | tee node-tests.txt
            echo "- Node tests: exit=$EXIT" >> "$SUMMARY"
          fi
          # Python (pytest -> junit + coverage إن أمكن)
          if [ -f requirements.txt ] || [ -f pyproject.toml ] || [ -d tests ]; then
            python -m pip install -U pytest pytest-cov pytest-xdist || true
            (pytest -q --maxfail=1 --disable-warnings --junitxml=reports/junit.pytests.xml --cov=. --cov-report=xml || EXIT=$?) | tee py-tests.txt
            echo "- Python tests: exit=$EXIT" >> "$SUMMARY"
          fi
          # Rust
          if [ -f Cargo.toml ]; then (cargo test --all --locked || EXIT=$?) | tee rust-tests.txt; echo "- Rust tests: exit=$EXIT" >> "$SUMMARY"; fi
          # Go
          if [ -f go.mod ]; then (go test ./... -v || EXIT=$?) | tee go-tests.txt; echo "- Go tests: exit=$EXIT" >> "$SUMMARY"; fi
          # Maven/Gradle أعلاه نفذت؛ نضيف ملخصًا إن وُجدت
          if [ -f pom.xml ]; then echo "- Maven tests executed" >> "$SUMMARY"; fi
          if ls build.gradle* >/dev/null 2>&1; then echo "- Gradle tests executed" >> "$SUMMARY"; fi
          echo "*Finished:* $(date -u)" >> "$SUMMARY"
          echo $EXIT > .ziana_exit || true
          exit 0

      - name: Upload artifacts on failure
        if: ${{ failure() || (hashFiles('.ziana_exit') != '') }}
        uses: actions/upload-artifact@v4
        with:
          name: ziana-ci-logs
          path: |
            node-tests.txt
            py-tests.txt
            rust-tests.txt
            go-tests.txt
            reports/**
            **/junit*.xml
            **/coverage*.xml
          retention-days: 7